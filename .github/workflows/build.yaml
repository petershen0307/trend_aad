# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: build

permissions:
  contents: write

on:
  push:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Build
      run: make build_apps

    - name: Test
      run: make test

    - name: Set build version info into env
      id: set_build_version_info
      run: |
        version_prefix=v0.1
        version=$version_prefix.${{ github.run_number }}

        if [ ${{ github.ref }} != "refs/heads/main" ]
        then
          echo "branch is ${{ github.ref }}"
          echo "Not in main branch, add pr suffix to version"
          version=$version-pr
        fi
        echo "version=$version"
        echo "version=$version" >> $GITHUB_OUTPUT
        echo "::notice title=version::${version}"

    - name: Pack artifact
      id: pack_artifact
      run: |
        artifact_name=app_linux_${{ steps.set_build_version_info.outputs.version }}.tar.gz
        echo "artifact_name=$artifact_name" >> $GITHUB_OUTPUT
        make pack_app PACK_APP_NAME=$artifact_name

    - name: push tag ${{ steps.set_build_version_info.outputs.version }}
      run: |
        git tag -f ${{ steps.set_build_version_info.outputs.version }}
        git push origin ${{ steps.set_build_version_info.outputs.version }}

    - name: Upload artifact ${{ steps.pack_artifact.outputs.artifact_name }}
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.set_build_version_info.outputs.version }}
        files: out/${{ steps.pack_artifact.outputs.artifact_name }}
        target_commitish: ${{ github.ref }}
        prerelease: true